name: Test VFBquery Examples

on:
    push:
    pull_request:

jobs:
  test-examples:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            pip install deepdiff
            pip install .

      - name: Run examples from README.md
        run: |
          cat README.md | grep -e '```python' -e '```' -e '^[^`]*$' | sed -e '/^```python/,/^```/!d' -e '/^```/d' -e 's/\(vfb.[^)]*)\)/print(\1)/g' > test_examples.py
          cat test_examples.py
          python test_examples.py

      - name: Run examples from README.md and compare JSON outputs
        run: |
          echo 'results = []' > test_examples.py
          cat README.md | grep -e '```python' -e '```' -e '^[^`]*$' | sed -e '/^```python/,/^```/!d' -e '/^```/d' -e 's/\(vfb.[^)]*)\)/results.append(\1)/g' >> test_examples.py
          echo 'from src.vfbquery.term_info_queries import *' > test_results.py
          cat README.md | grep -e '```python' -e '```' -e '^[^`]*$' | sed -e '/^```json/,/^```/!d' -e '/^```/d' -e 's/\(vfb.[^)]*)\)/print(\1)/g' | sed -e ':a;N;$!ba;s/\n/ /g' -e 's/```json/```json\n/g' -e 's/}[[:space:]]*{/},{/g' -e 's/ \+/ /g' | sed -e '1s/^/results=[/' -e '1s/$/]/' | sed 's/\btrue\b/True/g' | sed 's/\bfalse\b/False/g' >> test_results.py
          python -c """
          import sys
          import json
          import vfbquery as vfb
          from deepdiff import DeepDiff
          from io import StringIO
          from test_results import results
          json_blocks = results
          from test_examples import results
          python_blocks = results

          print(f'Found {len(python_blocks)} Python code blocks')
          print(f'Found {len(json_blocks)} JSON blocks')
      
          for python_code, expected_json in zip(python_blocks, json_blocks):
            print(f'Running example: {python_code}')
            print(f'Expected JSON: {expected_json}')
      
            # Capture the output of the Python code
            sys.stdout = StringIO()
            print(exec(python_code))
            output = sys.stdout.getvalue().strip()
      
            # Compare the output JSON with the expected JSON
            output_json = json.loads(output)
            diff = DeepDiff(expected_json, output_json, ignore_order=True)
      
            if diff:
                print('Error in example:')
                print(python_code)
                print('Expected JSON:')
                print(expected_json)
                print('Output JSON:')
                print(output_json)
                print('Difference:')
                print(diff)
                sys.exit(1)
      
          print('All examples passed.')
          sys.stdout = sys.__stdout__"""
        shell: /usr/bin/bash -e {0}
        env:
          pythonLocation: /opt/hostedtoolcache/Python/3.8.16/x64
          LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.8.16/x64/lib
        
name: Publish to PyPI

on:
  workflow_dispatch:
  release:
    types: [created]
  # TODO: For testing purpose, delete this trigger afterwards
#  push:
#    paths:
#      - '.github/workflows/publish_to_pypi.yaml'

jobs:
  build-n-publish:
    name: Build and publish Python distributions to PyPI
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Update version in setup.py
        uses: actions/github-script@v4
        with:
          script: |
            const fs = require('fs');
            const semver = require('semver');
            const version = context.payload.release.tag_name.replace(/^v/, '');
            const setupFile = `${process.env.GITHUB_WORKSPACE}/setup.py`;
            const setupContent = fs.readFileSync(setupFile, 'utf8');
            const newSetupContent = setupContent.replace(
              /__version__\s*=\s*['"][^'"]*['"]/,
              `__version__ = '${version}'`
            );
            fs.writeFileSync(setupFile, newSetupContent, 'utf8');
          dependencies: |
            const fs = require('fs');
            const semver = require('semver');
            const setupFile = `${process.env.GITHUB_WORKSPACE}/setup.py`;
            const setupContent = fs.readFileSync(setupFile, 'utf8');
            const versionMatch = setupContent.match(/__version__\s*=\s*['"]([^'"]*)['"]/);
            if (versionMatch && semver.valid(versionMatch[1])) {
              return true;
            } else {
              throw new Error(`Invalid version in setup.py: ${versionMatch ? versionMatch[1] : 'undefined'}`);
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install wheel and setuptools
      run: >-
        python -m
        pip install
        wheel
        setuptools
        get_version
        --user
        --upgrade
    - name: Build a binary wheel and a source tarball
      run: >-
        python3
        setup.py
        sdist
        bdist_wheel
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
#    - name: Publish package to TestPyPI
#      uses: pypa/gh-action-pypi-publish@release/v1
#      with:
#        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#        repository_url: https://test.pypi.org/legacy/
